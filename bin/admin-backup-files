#!/bin/sh
#
# Performs a filesystem backup for configured directories.
#
# Syntax: admin-backup-files [-v]
#
# Options:
#   -v  Print verbose output.
#
# Files:
#   /etc/admin-backup-files.conf
#

# Configuration variables
CONFIG=/etc/admin-backup-files.conf
LOCALDIR=`dirname $0`/..
HOST=`hostname --fqdn`
OPTIONS="--archive --one-file-system --quiet"
DATE_MINUTE=`date '+%Y-%m-%d-%H%M'`
DATE_DAILY=`date '+%Y-%m-%d'`
DATE_MONTHLY=`date '+%Y-%m'`
HIST_DIR=/backup/$HOST/files
HIST_DIR_MINUTE=$HIST_DIR/$DATE_MINUTE
HIST_DIR_DAILY=$HIST_DIR/$DATE_DAILY
HIST_DIR_MONTHLY=$HIST_DIR/$DATE_MONTHLY
LATEST_DIR=/backup/$HOST/latest
VERBOSE="false"

# Function for printing verbose information
printinfo() {
    if [ $VERBOSE = "true" ] ; then
        echo `date +"%F %T"`: $*
    fi
}

# Check for root user
if [ `whoami` != 'root' ] ; then
    echo "ERROR: Only root is allowed to run admin-backup-files" >&2
    exit 1
fi

# Load config to stdin
if [ -f $CONFIG ] ; then
    exec < $CONFIG
elif [ -f $LOCALDIR/$CONFIG ] ; then
    exec < $LOCALDIR/$CONFIG
else
    echo "ERROR: Missing config file $CONFIG"
    exit 1
fi

# Parse command-line arguments
if [ "$1" = "-v" ] ; then
    shift
    VERBOSE=true
fi

# Select backup dir
if [ ! -d $HIST_DIR_MONTHLY ] ; then
    BACKUP_DIR=$HIST_DIR_MONTHLY
elif [ ! -d $HIST_DIR_DAILY ] ; then
    BACKUP_DIR=$HIST_DIR_DAILY
else
    BACKUP_DIR=$HIST_DIR_MINUTE
fi

# Perform backup
printinfo init backup to $BACKUP_DIR
mkdir -p $BACKUP_DIR
while read SRC ; do
    printinfo syncing dir $SRC
    mkdir -p $BACKUP_DIR$SRC
    RSYNC_OPTS=$OPTIONS
    if [ -d $LATEST_DIR$SRC ] ; then
        RSYNC_OPTS="$RSYNC_OPTS --link-dest=$LATEST_DIR$SRC/"
    fi
    rsync $RSYNC_OPTS $SRC/ $BACKUP_DIR$SRC/
done

# Update latest backup dir
rm -f $LATEST_DIR
ln -s $BACKUP_DIR $LATEST_DIR

# Remove outdated hourly and daily dirs
find $HIST_DIR -maxdepth 1 -type d -name "????-??-??-????" -mtime +2 -exec rm -rf {} \;
find $HIST_DIR -maxdepth 1 -type d -name "????-??-??" -mtime +30 -exec rm -rf {} \;

# Finished backup
/usr/local/bin/admin-freemem
printinfo done backup to $BACKUP_DIR
