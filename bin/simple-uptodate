#!/usr/bin/env bash
#
# Checks if the system requires (security) updates.
#
# Syntax: simple-uptodate [-s] [-m]
#
# Options:
#   -s  Check only for security updates.
#   -m  Mail root instead of printing results.
#

# Configuration parameters
HOST=`hostname`
SENDMAIL=/usr/sbin/sendmail
SECURITY=false
MAIL=false

# Set caution flags
set -o nounset
set -o errtrace
set -o errexit
set -o pipefail

# Function for logging an error to stderr and exiting
fail() {
    echo "ERROR:" "$@" >&2
    exit 1
}

# Check for root user
[ `whoami` == 'root' ] || fail "only root is allowed to run simple-uptodate"

# Parse command-line arguments
if [ "${1:-}" == "-s" ] ; then
    shift
    SECURITY=true
fi
if [ "${1:-}" == "-m" ] ; then
    shift
    MAIL=true
fi

# Check for update
apt-get update > /dev/null || fail "couldn't update package lists with apt-get"
apt-get clean || true
if [ "$SECURITY" == "true" ] ; then
    TYPE="security updates"
    SEARCH='~U ~Asecurity'
else
    TYPE="updates"
    SEARCH='~U'
fi
OUTFILE=/tmp/simple-uptodate.txt
aptitude search -F '%16p# %V# -- %d' "$SEARCH" > $OUTFILE || fail "couldn't search for $TYPE"
FOUND=`cat $OUTFILE | wc -l`
if [ $FOUND -ne 0 ] ; then
    if [ $MAIL == "true" ] ; then
        printf "Subject: System $TYPE for $HOST\n\n" > $OUTFILE.1
        printf "Found $FOUND system $TYPE for $HOST:\n\n" > $OUTFILE.2
        cat $OUTFILE.1 $OUTFILE.2 $OUTFILE | $SENDMAIL root
        rm $OUTFILE.1 $OUTFILE.2
    else
        printf "Found $FOUND system $TYPE for $HOST:\n\n"
        cat $OUTFILE
    fi
fi
rm $OUTFILE
/usr/local/bin/simple-freemem
