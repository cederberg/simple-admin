#!/usr/bin/env bash
#
# Checks for and optionally installs system (security) updates.
#
# Syntax: simple-uptodate [options]
#
# Options:
#   -a, --autoinstall  Automatically install updates found.
#   -s, --security     Only check for security updates.
#   -m, --mail         Mail root@localhost instead of printing results.
#

# Configuration parameters
PROCID="simple-uptodate[$$]"
HOST=`hostname`
SENDMAIL=/usr/sbin/sendmail
AUTOINSTALL=false
SECURITY=false
MAILREPORT=false

# Set caution flags
set -o nounset
set -o errtrace
set -o errexit
set -o pipefail

# Function for logging an error to stderr and syslog and exiting
fail() {
    echo "ERROR:" "$@" >&2
    logger -p local0.error -t "$PROCID" "$@" || true
    exit 1
}

# Function for printing command-line usage info
usage() {
    echo "Checks for and optionally installs system (security) updates."
    echo
    echo "Syntax: simple-uptodate [options]"
    echo
    echo "Options:"
    echo "  -a, --autoinstall  Automatically install updates found."
    echo "  -s, --security     Only check for security updates."
    echo "  -m, --mail         Mail root@localhost instead of printing results."
    exit 1
}

# Parse command-line arguments
while [ $# -gt 0 ] ; do
    case "$1" in
    "-a"|"--autoinstall")
        AUTOINSTALL=true
        shift
        ;;
    "-s"|"--security")
        SECURITY=true
        shift
        ;;
    "-m"|"--mail")
        MAILREPORT=true
        shift
        ;;
    "-?"|"-h"|"--help")
        usage
        ;;
    *)
        fail "invalid command-line argument: $1"
        ;;
    esac
done

# Check for root user
[ `whoami` == 'root' ] || fail "only root is allowed to run simple-uptodate"

# Ensure non-interactive usage & up-to-date packages
exec < /dev/null
export DEBIAN_FRONTEND="noninteractive"
apt-get --yes update > /dev/null || fail "couldn't update package lists with apt-get"
apt-get --yes clean || true

# Search for updates
if $SECURITY ; then
    TYPE="security updates"
    SEARCH='~U ~Asecurity'
else
    TYPE="updates"
    SEARCH='~U'
fi
OUTFILE=/tmp/simple-uptodate.txt
aptitude search -F '%16p# %V# -- %d' "$SEARCH" > $OUTFILE || fail "couldn't search for $TYPE"
FOUND=`cat $OUTFILE | wc -l`
if [ $FOUND -ne 0 ] ; then
    if $AUTOINSTALL ; then
	printf "\n\nInstalling $FOUND system $TYPE:\n\n" >> $OUTFILE
	PKGS=`aptitude search -F '%p' "$SEARCH"`
        aptitude --assume-yes safe-upgrade $PKGS >> $OUTFILE 2>&1 || fail "couldn't update packages $PKGS"
    fi
    if $MAILREPORT ; then
        (
            printf "Subject: System $TYPE for $HOST\n\n"
            printf "Found $FOUND system $TYPE for $HOST:\n\n"
            cat $OUTFILE
        ) | $SENDMAIL root
    else
        printf "Found $FOUND system $TYPE for $HOST:\n\n"
        cat $OUTFILE
    fi
fi
rm $OUTFILE
