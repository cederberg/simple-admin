#!/usr/bin/env bash
#
# Creates a debug dump for a process.
#
# Syntax: simple-procdump <pid>
#

# Configuration variables
VERBOSE="true"

# Set caution flags
set -o nounset
set -o errtrace
set -o errexit
set -o pipefail

# Setup color codes
COLOR_OFF=`tput sgr0`
COLOR_OK=`tput setaf 2`
COLOR_WARN=`tput setaf 3`
COLOR_ERR=`tput setaf 1; tput bold`

# Function for printing command-line usage info
usage() {
    echo "Creates a debug dump for a process."
    echo
    echo "Syntax: simple-procdump <pid>"
    exit 1
}

# Function for logging information in verbose mode
log() {
    [ "$VERBOSE" == "true" ] && echo `date +"%F %T"`: "$@" || true
}

# Function for logging a warning to stderr without exiting
warn() {
    echo "${COLOR_ERR}WARNING:${COLOR_OFF}" "$@" >&2
}

# Function for logging an error to stderr and exiting
fail() {
    echo "${COLOR_ERR}ERROR:${COLOR_OFF}" "$@" >&2
    exit 1
}

# Parse command-line arguments
if [ ! $# -eq 1 ] ; then
    usage
fi
if [ -r "$1" ] ; then
    PID=$(<"$1")
else
    PID=$1
fi
if [ ! -r /proc/$PID ] ; then
    fail "cannot read process (pid: $PID)"
fi

NOW=`date +"%Y-%m-%d-%H%M%S"`
DUMPDIR=/tmp/simple-procdump-$NOW-$PID
log "Starting dump of process $PID, logging data for 10 secs..."
mkdir -p $DUMPDIR
uptime > $DUMPDIR/system-uptime
free > $DUMPDIR/system-mem
df > $DUMPDIR/system-disk
cp /proc/$PID/status $DUMPDIR/proc-status
ls -l /proc/$PID/fd/ > $DUMPDIR/proc-fd-list
ps -f $PID > $DUMPDIR/proc-ps
pstree -p $PID > $DUMPDIR/proc-pstree
top -b -n 1 > $DUMPDIR/system-top 2> /dev/null &
CHILDREN="$!"
if [ -x /usr/bin/strace ] ; then
    /usr/bin/strace -p $PID -q -s 2000 -T -C -f -o $DUMPDIR/proc-strace > /dev/null 2>&1 &
    CHILDREN="$CHILDREN $!"
fi
if [ -x /usr/sbin/iotop  ] ; then
    /usr/sbin/iotop -qqq --only > $DUMPDIR/system-iotop 2> /dev/null &
    CHILDREN="$CHILDREN $!"
fi
if [ -x /usr/bin/sar ] ; then
    /usr/bin/sar -u ALL 1 > $DUMPDIR/system-cpu-sar 2> /dev/null &
    CHILDREN="$CHILDREN $!"
    /usr/bin/sar -r 1 > $DUMPDIR/system-mem-sar 2> /dev/null &
    CHILDREN="$CHILDREN $!"
    /usr/bin/sar -b 1 > $DUMPDIR/system-io-sar 2> /dev/null &
    CHILDREN="$CHILDREN $!"
    /usr/bin/sar -n IP 1 > $DUMPDIR/system-ipv4-sar 2> /dev/null &
    CHILDREN="$CHILDREN $!"
    /usr/bin/sar -n IP6 1 > $DUMPDIR/system-ipv6-sar 2> /dev/null &
    CHILDREN="$CHILDREN $!"
fi
LOGS=`find /proc/$PID/cwd/ -type d -name "log*"`
LOGS="/var/log/ $LOGS"
find $LOGS -mmin -10 | xargs tail > $DUMPDIR/logs
sleep 10
kill $CHILDREN > /dev/null 2>&1 || true
sleep 1
kill -9 $CHILDREN > /dev/null 2>&1 || true
log "Done dumping to $DUMPDIR"
