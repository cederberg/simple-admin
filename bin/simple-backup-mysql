#!/usr/bin/env bash
#
# Performs a MySQL dump of configured databases.
#
# Syntax: simple-backup-mysql [-v]
#
# Options:
#   -v  Print verbose output.
#
# Files:
#   /etc/simple-backup-mysql.conf
#

# Configuration variables
CONFIG=/etc/simple-backup-mysql.conf
LOCALDIR=`dirname $0`/..
HOST=`hostname`
DATE=`date '+%Y-%m-%d'`
TEMP_DIR=/tmp/$$
DUMP_DIR=/backup/$HOST/mysql
OPTIONS="--opt --quote-names --skip-add-locks --skip-lock-tables"
VERBOSE="false"

# Set caution flags
set -o nounset
set -o errtrace
set -o errexit
set -o pipefail

# Function for logging an error to stderr and exiting
fail() {
    echo "ERROR:" "$*" >&2
    exit 1
}

# Function for logging information in verbose mode
log() {
    [ "$VERBOSE" == "true" ] && echo `date +"%F %T"`: "$*" || true
}

# Load config to stdin
if [ -f $CONFIG ] ; then
    exec < $CONFIG
elif [ -f $LOCALDIR/$CONFIG ] ; then
    exec < $LOCALDIR/$CONFIG
else
    fail "missing config file $CONFIG"
fi

# Parse command-line arguments
if [ "${1:-}" == "-v" ] ; then
    shift
    OPTIONS="$OPTIONS -v"
    VERBOSE=true
fi

# Perform MySQL backup
log "init MySQL backup on $HOST"
mkdir -p $DUMP_DIR $TEMP_DIR
while read DATABASE USER PWD EXTRAS ; do
    [ "$DATABASE" != "" -a "${DATABASE:0:1}" != "#" ] || continue
    log "starting MySQL dump of $DATABASE"
    FILE=$TEMP_DIR/$DATABASE.$DATE.sql
    mysqldump -u$USER -p$PWD $OPTIONS $EXTRAS --result-file=$FILE --databases $DATABASE
    log "finished MySQL dump of $DATABASE"
done

# Package and compress backups
FILE=databases.$DATE.tar
log "starting compression & transfer of file $FILE"
tar cf $TEMP_DIR/$FILE $TEMP_DIR/*.sql
xz $TEMP_DIR/$FILE
mv -f $TEMP_DIR/$FILE.* $DUMP_DIR/
rm -rf $TEMP_DIR
log "finished compression & transfer of file $FILE"

# Remove outdated backup files
find $DUMP_DIR -type f -mtime +14 \! -name "*.????-??-01.*" -delete

# Finished backup
/usr/local/bin/simple-freemem
log "done MySQL backup on $HOST"
